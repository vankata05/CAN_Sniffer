import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions } from 'google-gax';
import * as protos from '../../protos/protos';
/**
 *  The Routes API.
 * @class
 * @memberof v2
 */
export declare class RoutesClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    routesStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of RoutesClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new RoutesClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): never[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Returns the primary route along with optional alternate routes, given a set
     * of terminal and intermediate waypoints.
     *
     * **NOTE:** This method requires that you specify a response field mask in
     * the input. You can provide the response field mask by using URL parameter
     * `$fields` or `fields`, or by using an HTTP/gRPC header `X-Goog-FieldMask`
     * (see the [available URL parameters and
     * headers](https://cloud.google.com/apis/docs/system-parameters). The value
     * is a comma separated list of field paths. See detailed documentation about
     * [how to construct the field
     * paths](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/field_mask.proto).
     *
     * For example, in this method:
     *
     * * Field mask of all available fields (for manual inspection):
     *   `X-Goog-FieldMask: *`
     * * Field mask of Route-level duration, distance, and polyline (an example
     * production setup):
     *   `X-Goog-FieldMask:
     *   routes.duration,routes.distanceMeters,routes.polyline.encodedPolyline`
     *
     * Google discourage the use of the wildcard (`*`) response field mask, or
     * specifying the field mask at the top level (`routes`), because:
     *
     * * Selecting only the fields that you need helps our server save computation
     * cycles, allowing us to return the result to you with a lower latency.
     * * Selecting only the fields that you need
     * in your production job ensures stable latency performance. We might add
     * more response fields in the future, and those new fields might require
     * extra computation time. If you select all fields, or if you select all
     * fields at the top level, then you might experience performance degradation
     * because any new field we add will be automatically included in the
     * response.
     * * Selecting only the fields that you need results in a smaller response
     * size, and thus higher network throughput.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.maps.routing.v2.Waypoint} request.origin
     *   Required. Origin waypoint.
     * @param {google.maps.routing.v2.Waypoint} request.destination
     *   Required. Destination waypoint.
     * @param {number[]} [request.intermediates]
     *   Optional. A set of waypoints along the route (excluding terminal points),
     *   for either stopping at or passing by. Up to 25 intermediate waypoints are
     *   supported.
     * @param {google.maps.routing.v2.RouteTravelMode} [request.travelMode]
     *   Optional. Specifies the mode of transportation.
     * @param {google.maps.routing.v2.RoutingPreference} [request.routingPreference]
     *   Optional. Specifies how to compute the route. The server
     *   attempts to use the selected routing preference to compute the route. If
     *    the routing preference results in an error or an extra long latency, then
     *   an error is returned. You can specify this option only when the
     *   `travel_mode` is `DRIVE` or `TWO_WHEELER`, otherwise the request fails.
     * @param {google.maps.routing.v2.PolylineQuality} [request.polylineQuality]
     *   Optional. Specifies your preference for the quality of the polyline.
     * @param {google.maps.routing.v2.PolylineEncoding} [request.polylineEncoding]
     *   Optional. Specifies the preferred encoding for the polyline.
     * @param {google.protobuf.Timestamp} [request.departureTime]
     *   Optional. The departure time. If you don't set this value, then this value
     *   defaults to the time that you made the request.
     *   NOTE: You can only specify a `departure_time` in the past when
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} is set to
     *   `TRANSIT`.
     * @param {google.protobuf.Timestamp} [request.arrivalTime]
     *   Optional. The arrival time.
     *   NOTE: Can only be set when
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} is set to
     *   `TRANSIT`. You can specify either departure_time or arrival_time, but not
     *   both.
     * @param {boolean} [request.computeAlternativeRoutes]
     *   Optional. Specifies whether to calculate alternate routes in addition to
     *   the route. No alternative routes are returned for requests that have
     *   intermediate waypoints.
     * @param {google.maps.routing.v2.RouteModifiers} [request.routeModifiers]
     *   Optional. A set of conditions to satisfy that affect the way routes are
     *   calculated.
     * @param {string} [request.languageCode]
     *   Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     *   information, see
     *   http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. See
     *   [Language Support](https://developers.google.com/maps/faq#languagesupport)
     *   for the list of supported languages. When you don't provide this value, the
     *   display language is inferred from the location of the route request.
     * @param {string} [request.regionCode]
     *   Optional. The region code, specified as a ccTLD ("top-level domain")
     *   two-character value. For more information see
     *   https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains
     * @param {google.maps.routing.v2.Units} [request.units]
     *   Optional. Specifies the units of measure for the display fields. These
     *   fields include the `instruction` field in
     *   {@link protos.google.maps.routing.v2.NavigationInstruction|NavigationInstruction}. The
     *   units of measure used for the route, leg, step distance, and duration are
     *   not affected by this value. If you don't provide this value, then the
     *   display units are inferred from the location of the first origin.
     * @param {boolean} [request.optimizeWaypointOrder]
     *   Optional. If set to true, the service attempts to minimize the overall cost
     *   of the route by re-ordering the specified intermediate waypoints. The
     *   request fails if any of the intermediate waypoints is a `via` waypoint. Use
     *   `ComputeRoutesResponse.Routes.optimized_intermediate_waypoint_index` to
     *   find the new ordering.
     *   If `ComputeRoutesResponseroutes.optimized_intermediate_waypoint_index` is
     *   not requested in the `X-Goog-FieldMask` header, the request fails.
     *   If `optimize_waypoint_order` is set to false,
     *   `ComputeRoutesResponse.optimized_intermediate_waypoint_index` will be
     *   empty.
     * @param {number[]} [request.requestedReferenceRoutes]
     *   Optional. Specifies what reference routes to calculate as part of the
     *   request in addition to the default route. A reference route is a route with
     *   a different route calculation objective than the default route. For example
     *   a `FUEL_EFFICIENT` reference route calculation takes into account various
     *   parameters that would generate an optimal fuel efficient route.
     * @param {number[]} [request.extraComputations]
     *   Optional. A list of extra computations which may be used to complete the
     *   request. Note: These extra computations may return extra fields on the
     *   response. These extra fields must also be specified in the field mask to be
     *   returned in the response.
     * @param {google.maps.routing.v2.TrafficModel} [request.trafficModel]
     *   Optional. Specifies the assumptions to use when calculating time in
     *   traffic. This setting affects the value returned in the duration field in
     *   the {@link protos.google.maps.routing.v2.Route|Route} and
     *   {@link protos.google.maps.routing.v2.RouteLeg|RouteLeg} which contains the predicted
     *   time in traffic based on historical averages.
     *   `TrafficModel` is only available for requests that have set
     *   {@link protos.google.maps.routing.v2.RoutingPreference|RoutingPreference} to
     *   `TRAFFIC_AWARE_OPTIMAL` and
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} to `DRIVE`.
     *   Defaults to `BEST_GUESS` if traffic is requested and `TrafficModel` is not
     *   specified.
     * @param {google.maps.routing.v2.TransitPreferences} [request.transitPreferences]
     *   Optional. Specifies preferences that influence the route returned for
     *   `TRANSIT` routes. NOTE: You can only specify a `transit_preferences` when
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} is set to
     *   `TRANSIT`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.maps.routing.v2.ComputeRoutesResponse|ComputeRoutesResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/routes.compute_routes.js</caption>
     * region_tag:routes_v2_generated_Routes_ComputeRoutes_async
     */
    computeRoutes(request?: protos.google.maps.routing.v2.IComputeRoutesRequest, options?: CallOptions): Promise<[
        protos.google.maps.routing.v2.IComputeRoutesResponse,
        protos.google.maps.routing.v2.IComputeRoutesRequest | undefined,
        {} | undefined
    ]>;
    computeRoutes(request: protos.google.maps.routing.v2.IComputeRoutesRequest, options: CallOptions, callback: Callback<protos.google.maps.routing.v2.IComputeRoutesResponse, protos.google.maps.routing.v2.IComputeRoutesRequest | null | undefined, {} | null | undefined>): void;
    computeRoutes(request: protos.google.maps.routing.v2.IComputeRoutesRequest, callback: Callback<protos.google.maps.routing.v2.IComputeRoutesResponse, protos.google.maps.routing.v2.IComputeRoutesRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Takes in a list of origins and destinations and returns a stream containing
     * route information for each combination of origin and destination.
     *
     * **NOTE:** This method requires that you specify a response field mask in
     * the input. You can provide the response field mask by using the URL
     * parameter `$fields` or `fields`, or by using the HTTP/gRPC header
     * `X-Goog-FieldMask` (see the [available URL parameters and
     * headers](https://cloud.google.com/apis/docs/system-parameters). The value
     * is a comma separated list of field paths. See this detailed documentation
     * about [how to construct the field
     * paths](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/field_mask.proto).
     *
     * For example, in this method:
     *
     * * Field mask of all available fields (for manual inspection):
     *   `X-Goog-FieldMask: *`
     * * Field mask of route durations, distances, element status, condition, and
     *   element indices (an example production setup):
     *   `X-Goog-FieldMask:
     *   originIndex,destinationIndex,status,condition,distanceMeters,duration`
     *
     * It is critical that you include `status` in your field mask as otherwise
     * all messages will appear to be OK. Google discourages the use of the
     * wildcard (`*`) response field mask, because:
     *
     * * Selecting only the fields that you need helps our server save computation
     * cycles, allowing us to return the result to you with a lower latency.
     * * Selecting only the fields that you need in your production job ensures
     * stable latency performance. We might add more response fields in the
     * future, and those new fields might require extra computation time. If you
     * select all fields, or if you select all fields at the top level, then you
     * might experience performance degradation because any new field we add will
     * be automatically included in the response.
     * * Selecting only the fields that you need results in a smaller response
     * size, and thus higher network throughput.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {number[]} request.origins
     *   Required. Array of origins, which determines the rows of the response
     *   matrix. Several size restrictions apply to the cardinality of origins and
     *   destinations:
     *
     *   * The number of elements (origins × destinations) must be no greater than
     *   625 in any case.
     *   * The number of elements (origins × destinations) must be no greater than
     *   100 if routing_preference is set to `TRAFFIC_AWARE_OPTIMAL`.
     *   * The number of waypoints (origins + destinations) specified as `place_id`
     *   must be no greater than 50.
     * @param {number[]} request.destinations
     *   Required. Array of destinations, which determines the columns of the
     *   response matrix.
     * @param {google.maps.routing.v2.RouteTravelMode} [request.travelMode]
     *   Optional. Specifies the mode of transportation.
     * @param {google.maps.routing.v2.RoutingPreference} [request.routingPreference]
     *   Optional. Specifies how to compute the route. The server attempts to use
     *   the selected routing preference to compute the route. If the routing
     *   preference results in an error or an extra long latency, an error is
     *   returned. You can specify this option only when the `travel_mode` is
     *   `DRIVE` or `TWO_WHEELER`, otherwise the request fails.
     * @param {google.protobuf.Timestamp} [request.departureTime]
     *   Optional. The departure time. If you don't set this value, then this value
     *   defaults to the time that you made the request.
     *   NOTE: You can only specify a `departure_time` in the past when
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} is set to
     *   `TRANSIT`.
     * @param {google.protobuf.Timestamp} [request.arrivalTime]
     *   Optional. The arrival time.
     *   NOTE: Can only be set when
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} is set to
     *   `TRANSIT`. You can specify either departure_time or arrival_time, but not
     *   both.
     * @param {string} [request.languageCode]
     *   Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
     *   information, see
     *   http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. See
     *   [Language Support](https://developers.google.com/maps/faq#languagesupport)
     *   for the list of supported languages. When you don't provide this value, the
     *   display language is inferred from the location of the first origin.
     * @param {string} [request.regionCode]
     *   Optional. The region code, specified as a ccTLD ("top-level domain")
     *   two-character value. For more information see
     *   https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains
     * @param {number[]} [request.extraComputations]
     *   Optional. A list of extra computations which may be used to complete the
     *   request. Note: These extra computations may return extra fields on the
     *   response. These extra fields must also be specified in the field mask to be
     *   returned in the response.
     * @param {google.maps.routing.v2.TrafficModel} [request.trafficModel]
     *   Optional. Specifies the assumptions to use when calculating time in
     *   traffic. This setting affects the value returned in the duration field in
     *   the {@link protos.google.maps.routing.v2.RouteMatrixElement|RouteMatrixElement} which
     *   contains the predicted time in traffic based on historical averages.
     *   {@link protos.google.maps.routing.v2.RoutingPreference|RoutingPreference} to
     *   `TRAFFIC_AWARE_OPTIMAL` and
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} to `DRIVE`.
     *   Defaults to `BEST_GUESS` if traffic is requested and `TrafficModel` is not
     *   specified.
     * @param {google.maps.routing.v2.TransitPreferences} [request.transitPreferences]
     *   Optional. Specifies preferences that influence the route returned for
     *   `TRANSIT` routes. NOTE: You can only specify a `transit_preferences` when
     *   {@link protos.google.maps.routing.v2.RouteTravelMode|RouteTravelMode} is set to
     *   `TRANSIT`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits {@link protos.google.maps.routing.v2.RouteMatrixElement|RouteMatrixElement} on 'data' event.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#server-streaming | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/routes.compute_route_matrix.js</caption>
     * region_tag:routes_v2_generated_Routes_ComputeRouteMatrix_async
     */
    computeRouteMatrix(request?: protos.google.maps.routing.v2.IComputeRouteMatrixRequest, options?: CallOptions): gax.CancellableStream;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
